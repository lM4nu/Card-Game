{"version":3,"sources":["components/Status.js","components/Item.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Status","props","className","this","score","best","Component","Item","capitalize","string","toUpperCase","slice","id","onClick","clickHandler","src","alt","name","Game","state","list","usedNumbers","clicked","getData","bind","n","a","i","num","parseInt","Math","random","includes","push","fetch","response","json","data","sprites","front_default","setState","prevState","arr","length","j","floor","level","e","el","target","tagName","parentElement","console","log","lvlHandler","scoreHandler","shuffleArray","pokemons","map","App","arg","render","localStorage","setItem","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4PAiBeA,E,kDAdX,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,yCAAYC,KAAKF,MAAMG,MAAvB,OACA,wCAAWD,KAAKF,MAAMI,KAAtB,c,GATKC,a,wBCkBNC,E,kDAjBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAGbO,WAAa,SAACC,GAAD,OAAYA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,IAJ1C,E,0CAMnB,WACI,OAEI,cADA,CACA,OAAKC,GAAIT,KAAKF,MAAMW,GAAIV,UAAU,YAAYW,QAASV,KAAKF,MAAMa,aAAlE,UACI,qBAAKC,IAAKZ,KAAKF,MAAMc,IAAMC,IAAI,KAC/B,6BAAKb,KAAKK,WAAWL,KAAKF,MAAMgB,e,GAZ7BX,aCoFJY,E,kDAlFb,WAAYjB,GAAQ,IAAD,8BAClB,cAAMA,IACDkB,MAAQ,CACVC,KAAO,GACPC,YAAc,GACjBC,QAAU,IAED,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKV,aAAe,EAAKA,aAAaU,KAAlB,gBARX,E,kFAWpB,WAAcC,GAAd,qBAAAC,EAAA,sDACUC,EAAI,EADd,YACiBA,EAAIF,GADrB,iBAKE,IALF,SAGMG,EAAMC,SAAS,IAAAC,KAAKC,SAAuB,GAExC5B,KAAKgB,MAAME,YAAYW,SAASJ,IACtCA,EAAMC,SAAS,IAAAC,KAAKC,SAAuB,GAN9C,OASE5B,KAAKgB,MAAME,YAAYY,KAAKL,GAT9B,SAU+BM,MAAM,qCAAD,OAAsCN,EAAtC,MAVpC,cAUcO,EAVd,iBAW2BA,EAASC,OAXpC,QAWcC,EAXd,OAYQlC,KAAKgB,MAAMC,KAAKa,KAAK,CAACI,EAAKC,QAAQC,cAAeF,EAAKpB,KAAMW,IACnEzB,KAAKqC,UAAS,SAACC,GAAD,MAAgB,CAC5BrB,KAAOqB,EAAUrB,SAdrB,0DACwBO,IADxB,yE,iFAqBA,SAAae,GACZ,IAAK,IAAIf,EAAIe,EAAIC,OAAS,EAAGhB,EAAI,EAAGA,IAAK,CACvC,IAAMiB,EAAId,KAAKe,MAAMf,KAAKC,UAAYJ,EAAI,IADH,EAEpB,CAACe,EAAIE,GAAIF,EAAIf,IAA/Be,EAAIf,GAFkC,KAE9Be,EAAIE,GAF0B,Q,+BAM1C,WACCzC,KAAKoB,QAAyB,EAAjBpB,KAAKF,MAAM6C,S,0BAGzB,SAAaC,GACZ,IAAIC,EACyBA,EAAR,QAArBD,EAAEE,OAAOC,QAAyBH,EAAEE,OAAOE,cAAqBJ,EAAEE,OAClEG,QAAQC,IAAIL,EAAGpC,IACXT,KAAKgB,MAAMG,QAAQU,SAASgB,EAAGpC,KAWlCT,KAAKF,MAAMqD,WAAW,SACtBnD,KAAKF,MAAMsD,aAAa,WAVxBpD,KAAKgB,MAAMG,QAAQW,KAAKe,EAAGpC,IAC3BT,KAAKF,MAAMsD,aAAa,OACxBpD,KAAKqD,aAAarD,KAAKgB,MAAMC,MAC7BjB,KAAKqC,UAAS,SAAAC,GAAS,MAAK,CAC3BrB,KAAOqB,EAAUrB,KACjBE,QAAUmB,EAAUnB,aAQlBnB,KAAKgB,MAAMG,QAAQqB,SAA8B,EAAnBxC,KAAKF,MAAM6C,OAC3C3C,KAAKF,MAAMqD,WAAW,Q,oBAIzB,WAAU,IAAD,OAEKG,EAAWtD,KAAKgB,MAAMC,KAAKsC,KAAI,SAAChB,GAAD,OAChC,cAAC,EAAD,CAAMpB,QAAS,EAAKH,MAAMG,QAAsBP,IAAK2B,EAAI,GAAIzB,KAAMyB,EAAI,GAAI9B,GAAI8B,EAAI,GAAI5B,aAAc,EAAKA,cAAlE4B,EAAI,OAGxD,OACC,gCACc,uBACA,qBAAKxC,UAAU,iBAAf,SAAiCuD,W,GA7E/BnD,aCkEJqD,E,kDA/Db,aAAc,IAAD,8BACX,gBAUFL,WAAa,SAACM,GACD,OAARA,EACH,EAAKpB,UAAS,SAAArB,GAAK,MAAK,CACtB2B,MAAQ3B,EAAM2B,MAAQ,EACtBe,QAAQ,MACN,WACH,EAAKrB,SAAS,CACZqB,QAAS,OAKZ,EAAKrB,UAAS,SAAArB,GAAK,MAAK,CACtB2B,MAAQ,EACRe,QAAQ,MACN,WACH,EAAKrB,SAAS,CACZqB,QAAS,QA5BD,EAmCbN,aAAe,SAACK,GACH,QAARA,EACD,EAAKpB,UAAS,SAAAC,GAAS,MAAK,CAC1BrC,MAAQqC,EAAUrC,MAAQ,MACzB,WACE,EAAKe,MAAMf,MAAQ,EAAKe,MAAMd,MAC/B,EAAKmC,SAAS,CACZnC,KAAO,EAAKc,MAAMf,QAClB,kBAAM0D,aAAaC,QAAQ,OAAO,EAAK5C,MAAMd,YAInD,EAAKmC,SAAS,CACZpC,MAAQ,KA9CZ,EAAKe,MAAQ,CACX2B,MAAQ,EACRe,QAAS,EACTzD,MAAO,EACPC,KAAOyD,aAAaE,QAAQ,QAAUF,aAAaE,QAAQ,QAAU,GAEvE,EAAKV,WAAa,EAAKA,WAAW9B,KAAhB,gBARP,E,0CAqDb,WACE,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAOD,KAAKgB,MAAMf,MAAOC,KAAMF,KAAKgB,MAAMd,OACjDF,KAAKgB,MAAM0C,OAAS,cAAC,EAAD,CAAMf,MAAO3C,KAAKgB,MAAM2B,MAAOQ,WAAYnD,KAAKmD,WAAYC,aAAcpD,KAAKoD,eAAkB,Y,GA1D5GjD,aCOH2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c30b762d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Status extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"status\">\n                <h1>Score: {this.props.score} </h1>\n                <h1>Best: {this.props.best} </h1>\n            </div>\n        )\n    }\n}\n\nexport default Status","import React, { Component } from 'react'\n\nclass Item extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n\tcapitalize = (string) => string[0].toUpperCase() + string.slice(1)\n\n    render() {\n        return (\n            // <div id={this.props.id} className={this.props.clicked.includes(this.props.id+\"\") ? \"poke-item-clicked\" : \"poke-item\"}onClick={this.props.clickHandler}>\n            <div id={this.props.id} className=\"poke-item\" onClick={this.props.clickHandler}>\n                <img src={this.props.src } alt=\"\"/>\n                <h2>{this.capitalize(this.props.name)}</h2>\n            </div>\n        )\n    }\n}\n\nexport default Item\n","import React, {Component} from 'react'\nimport Item from './Item'\n\nclass Game extends Component {\n  constructor(props) {\n\t  super(props) \n\t  this.state = {\n      list : [],\n      usedNumbers : [],\n\t  clicked : []\n    }\n            this.getData = this.getData.bind(this);\n            this.clickHandler = this.clickHandler.bind(this);\n  }\n\n\tasync getData(n){\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\ttry {\n\t\t\tlet num = parseInt(Math.random() * (800 - 1) + 1)\n\n\t\t\twhile (this.state.usedNumbers.includes(num)) {\n\t\t\t\tnum = parseInt(Math.random() * (800 - 1) + 1)\n\t\t\t}\n\n\t\t\tthis.state.usedNumbers.push(num);\n\t\t      \tconst response = await fetch(`https://pokeapi.co/api/v2/pokemon/${num}/`);\n\t\t      \tconst data = await response.json();\n\t      \t\tthis.state.list.push([data.sprites.front_default, data.name, num]);\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\tlist : prevState.list\n\t\t\t\t}))\n\t\t\t}catch (err) {}\n\t\t}\n\t}\n\n\n\tshuffleArray(arr) {\n\t\tfor (let i = arr.length - 1; i > 0; i--) {\n\t\t  const j = Math.floor(Math.random() * (i + 1));\n\t\t  [arr[i], arr[j]] = [arr[j], arr[i]];\n\t\t}\n\t  }\n\t\n\tcomponentDidMount(){\n\t\tthis.getData(this.props.level*5);\n\t}\n\n\tclickHandler(e) {\n\t\tlet el;\n\t\te.target.tagName !== \"DIV\" ? el = e.target.parentElement : el = e.target;\n\t\tconsole.log(el.id);\n\t\tif(!this.state.clicked.includes(el.id)){\n\n\t\t\tthis.state.clicked.push(el.id);\n\t\t\tthis.props.scoreHandler('inc');\n\t\t\tthis.shuffleArray(this.state.list);\n\t\t\tthis.setState(prevState => ({\n\t\t\t\tlist : prevState.list,\n\t\t\t\tclicked : prevState.clicked\n\t\t\t}))\n\n\t\t}else{\n\t\t\tthis.props.lvlHandler('Reset');\n\t\t\tthis.props.scoreHandler('Reset');\n\t\t}\n\n\t\tif (this.state.clicked.length === this.props.level * 5 ){\n \t\t\tthis.props.lvlHandler('Up') ;\n\t\t}\n\t}\n\n\trender() {\n\n        \tconst pokemons = this.state.list.map((arr) => (\n            \t\t<Item clicked={this.state.clicked} key={arr[2]} src={arr[0]} name={arr[1]} id={arr[2]} clickHandler={this.clickHandler}/>\n\t\t));\n\n\t\treturn (\n\t\t\t<div>\n                \t<br></br>\n                \t<div className=\"poke-container\">{pokemons}</div>\n            \t</div>\n        )\n    }\n}\n\nexport default Game\n","import './App.css';\nimport React, { Component } from 'react';\nimport Status from './components/Status';\nimport Game from './components/Game';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      level : 1,\n      render : true,\n      score: 0,\n      best : localStorage.getItem('Best') ? localStorage.getItem('Best') : 0\n    }\n    this.lvlHandler = this.lvlHandler.bind(this)\n  }\n\n  lvlHandler = (arg) => {\n    if(arg === 'Up'){\n    this.setState(state => ({\n      level : state.level + 1,\n      render: false\n    }), () => {\n     this.setState({\n       render : true\n     })\n    }\n    )\n  }else{\n    this.setState(state => ({\n      level : 1 ,\n      render: false\n    }), () => {\n     this.setState({\n       render : true\n     })\n    }\n    )\n    }\n  }\n\n  scoreHandler = (arg) => {\n    if(arg === 'inc'){\n      this.setState(prevState => ({\n        score : prevState.score + 1\n      }),() => {\n        if(this.state.score > this.state.best){\n          this.setState({\n            best : this.state.score\n          },() => localStorage.setItem('Best',this.state.best))\n        }\n      })\n    }else{\n      this.setState({\n        score : 0\n      })\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Status score={this.state.score} best={this.state.best}/>\n        {this.state.render ? <Game level={this.state.level} lvlHandler={this.lvlHandler} scoreHandler={this.scoreHandler}/> : null }\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}